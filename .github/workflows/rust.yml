name: rust

on:

  push:
    branches: [ master ]

  pull_request:
    branches: [ master ]

  schedule:
    - cron: "33 3 * * *"

env:

  CARGO_TERM_COLOR: always

jobs:

  clippy:
    runs-on: ubuntu-latest
    steps:

      - name: Tooling cache
        uses: actions/cache@v3
        with:
          path: /home/runner/tooling
          key: clippy-tooling

      - name: Install tooling
        run: |
          rustup self uninstall -y
          export RUSTUP_HOME="$HOME/tooling/rustup"
          export CARGO_HOME="$HOME/tooling/cargo"
          export PATH="$CARGO_HOME/bin:$PATH"
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs \
            | sh -s -- --profile minimal --component clippy --default-toolchain nightly -y
          rustup install nightly
          echo "RUSTUP_HOME=$RUSTUP_HOME" >>$GITHUB_ENV
          echo "CARGO_HOME=$CARGO_HOME" >>$GITHUB_ENV
          echo "$CARGO_HOME/bin" >>$GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@v3

      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          args: >
            --all-features
            --
            --deny warnings
            --allow clippy::needless_collect
            --allow clippy::needless_range_loop
            --allow clippy::new_without_default
            --allow clippy::print_with_newline
            --allow clippy::type_complexity
            --allow clippy::useless_format
            --allow clippy::vec_init_then_push
            --allow clippy::write_with_newline
          name: clippy-results
          token: ${{ secrets.GITHUB_TOKEN }}

  stable:
    runs-on: ubuntu-latest
    steps:

      - name: Tooling cache
        uses: actions/cache@v3
        with:
          path: /home/runner/tooling
          key: stable-tooling

      - name: Install tooling
        run: |
          rustup self uninstall -y
          export RUSTUP_HOME="$HOME/tooling/rustup"
          export CARGO_HOME="$HOME/tooling/cargo"
          export PATH="$CARGO_HOME/bin:$PATH"
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs \
            | sh -s -- --profile minimal --default-toolchain stable -y
          rustup install stable
          echo "RUSTUP_HOME=$RUSTUP_HOME" >>$GITHUB_ENV
          echo "CARGO_HOME=$CARGO_HOME" >>$GITHUB_ENV
          echo "$CARGO_HOME/bin" >>$GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace --release

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --release

  beta:
    runs-on: ubuntu-latest
    steps:

      - name: Tooling cache
        uses: actions/cache@v3
        with:
          path: /home/runner/tooling
          key: beta-tooling

      - name: Install tooling
        run: |
          rustup self uninstall -y
          export RUSTUP_HOME="$HOME/tooling/rustup"
          export CARGO_HOME="$HOME/tooling/cargo"
          export PATH="$CARGO_HOME/bin:$PATH"
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs \
            | sh -s -- --profile minimal --default-toolchain beta -y
          rustup install beta
          echo "RUSTUP_HOME=$RUSTUP_HOME" >>$GITHUB_ENV
          echo "CARGO_HOME=$CARGO_HOME" >>$GITHUB_ENV
          echo "$CARGO_HOME/bin" >>$GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace --release

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --release

  nightly:
    runs-on: ubuntu-latest
    steps:

      - name: Tooling cache
        uses: actions/cache@v3
        with:
          path: /home/runner/tooling
          key: nightly-tooling

      - name: Install tooling
        run: |
          rustup self uninstall -y
          export RUSTUP_HOME="$HOME/tooling/rustup"
          export CARGO_HOME="$HOME/tooling/cargo"
          export PATH="$CARGO_HOME/bin:$PATH"
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs \
            | sh -s -- --profile minimal --default-toolchain nightly -y
          rustup install nightly
          echo "RUSTUP_HOME=$RUSTUP_HOME" >>$GITHUB_ENV
          echo "CARGO_HOME=$CARGO_HOME" >>$GITHUB_ENV
          echo "$CARGO_HOME/bin" >>$GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace --release

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --release

  docs:
    runs-on: ubuntu-latest
    steps:

      - name: Tooling cache
        uses: actions/cache@v3
        with:
          path: /home/runner/tooling
          key: docs-tooling

      - name: Install tooling
        run: |
          rustup self uninstall -y
          export RUSTUP_HOME="$HOME/tooling/rustup"
          export CARGO_HOME="$HOME/tooling/cargo"
          export PATH="$CARGO_HOME/bin:$PATH"
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs \
            | sh -s -- --profile minimal --default-toolchain nightly -y
          rustup install nightly
          echo "RUSTUP_HOME=$RUSTUP_HOME" >>$GITHUB_ENV
          echo "CARGO_HOME=$CARGO_HOME" >>$GITHUB_ENV
          echo "$CARGO_HOME/bin" >>$GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@v3

      - name: Generate docs
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --workspace

      - name: Prepare artifact
        run: |
          cd target
          tar --create --gzip --file doc.tar.gz doc

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: doc.tar.gz
          path: target/doc.tar.gz

  coverage:
    runs-on: ubuntu-latest
    steps:

      - name: Tooling cache
        uses: actions/cache@v3
        with:
          path: /home/runner/tooling
          key: coverage-tooling

      - name: Install tooling
        run: |
          rustup self uninstall -y
          export RUSTUP_HOME="$HOME/tooling/rustup"
          export CARGO_HOME="$HOME/tooling/cargo"
          export PATH="$CARGO_HOME/bin:$PATH"
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs \
            | sh -s -- --profile minimal --default-toolchain nightly -y
          rustup install nightly
          cargo install cargo-tarpaulin --version 0.20.1
          echo "RUSTUP_HOME=$RUSTUP_HOME" >>$GITHUB_ENV
          echo "CARGO_HOME=$CARGO_HOME" >>$GITHUB_ENV
          echo "$CARGO_HOME/bin" >>$GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@v3

      - name: Run tarpaulin
        run: >
          cargo tarpaulin
          --workspace
          --out Html
          --exclude-files main.rs
          --exclude-files build.rs
          --profile coverage
          --output-dir target/tarpaulin
        env:
          LD_LIBRARY_PATH: ${{ github.workspace }}/target/coverage

      - name: Prepare artifact
        run: |
          cd target
          tar --create --gzip --file tarpaulin.tar.gz tarpaulin

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: tarpaulin.tar.gz
          path: target/tarpaulin.tar.gz

  pages:
    runs-on: ubuntu-latest
    needs: [ docs, coverage ]
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: github-pages

      - name: Remove old
        run: rm -rf rustdoc coverage

      - name: Download docs artifact
        uses: actions/download-artifact@v3
        with:
          name: doc.tar.gz
          path: target

      - name: Download tarpaulin artifact
        uses: actions/download-artifact@v3
        with:
          name: tarpaulin.tar.gz
          path: target

      - name: Prepare pages
        run: |
          tar --extract --gzip --file target/doc.tar.gz --directory target
          tar --extract --gzip --file target/tarpaulin.tar.gz --directory target
          rsync --archive --delete target/doc/ rustdoc/
          rsync --archive --delete target/tarpaulin/ coverage/

      - name: Update pages
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add --all .
          git commit -m 'automatic update by github workflow'
          git push
