#!/bin/bash

set -euf -o pipefail

# find the repo

if [[ -d .git ]]; then
	true
elif [[ -d ../.git ]]; then
	cd ..
elif [[ -d ../../.git ]]; then
	cd ../..
else
	echo "Must be run from git repository" >&2
	exit 1
fi
declare root_dir="$PWD"
cd "$root_dir"

# set up work directory

declare work_dir="$root_dir/pre-commit"
if [[ "$0" != "$work_dir/misc/pre-commit" ]]; then
	rm -rf "$work_dir"
	mkdir "$work_dir"
	git checkout-index --all --force --prefix pre-commit/
	exec "$work_dir/misc/pre-commit" "$@"
fi
cd "$work_dir"

# update rust

rustup update

# modify manifest

{
	printf "cargo-features = [\"profile-rustflags\"]\n\n"
	cat Cargo.toml
	printf "\n[profile.pre-commit]\n\n"
	printf "\tinherits = \"release\"\n"
	printf "\trustflags = [ \"--deny\", \"warnings\" ]\n"
} >Cargo.toml.temp
mv Cargo.toml.temp Cargo.toml

# cargo helper

which_cargo="$(which cargo)"

function cargo {
	if ! "$which_cargo" +nightly "$@"; then
		echo "Error running command: cargo +nightly $*" >&2
		false
	fi
}

# execute build, test etc

export RUSTDOCFLAGS="-D warnings"

cargo check --frozen --workspace --all-targets --profile pre-commit
cargo test --frozen --workspace --profile pre-commit
cargo doc --frozen --profile pre-commit
cargo clippy --frozen --profile pre-commit -- $(cat "$root_dir/misc/clippy-args")

for year in 2015 2021; do
	cargo run --frozen --profile pre-commit --bin "aoc-$year"
done

# clean up

cd "$root_dir"
rm --recursive --force "$work_dir"

true
