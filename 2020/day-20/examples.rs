#![ cfg (test) ]

use super::*;

const EXAMPLE: & [& str] = & [
	"Tile 2311:",
	"..##.#..#.",
	"##..#.....",
	"#...##..#.",
	"####.#...#",
	"##.##.###.",
	"##...#.###",
	".#.#.#..##",
	"..#....#..",
	"###...#.#.",
	"..###..###",
	"",
	"Tile 1951:",
	"#.##...##.",
	"#.####...#",
	".....#..##",
	"#...######",
	".##.#....#",
	".###.#####",
	"###.##.##.",
	".###....#.",
	"..#.#..#.#",
	"#...##.#..",
	"",
	"Tile 1171:",
	"####...##.",
	"#..##.#..#",
	"##.#..#.#.",
	".###.####.",
	"..###.####",
	".##....##.",
	".#...####.",
	"#.##.####.",
	"####..#...",
	".....##...",
	"",
	"Tile 1427:",
	"###.##.#..",
	".#..#.##..",
	".#.##.#..#",
	"#.#.#.##.#",
	"....#...##",
	"...##..##.",
	"...#.#####",
	".#.####.#.",
	"..#..###.#",
	"..##.#..#.",
	"",
	"Tile 1489:",
	"##.#.#....",
	"..##...#..",
	".##..##...",
	"..#...#...",
	"#####...#.",
	"#..#.#.#.#",
	"...#.#.#..",
	"##.#...##.",
	"..##.##.##",
	"###.##.#..",
	"",
	"Tile 2473:",
	"#....####.",
	"#..#.##...",
	"#.##..#...",
	"######.#.#",
	".#...#.#.#",
	".#########",
	".###.#..#.",
	"########.#",
	"##...##.#.",
	"..###.#.#.",
	"",
	"Tile 2971:",
	"..#.#....#",
	"#...###...",
	"#.#.###...",
	"##.##..#..",
	".#####..##",
	".#..####.#",
	"#..#.#..#.",
	"..####.###",
	"..#.#.###.",
	"...#.#.#.#",
	"",
	"Tile 2729:",
	"...#.#.#.#",
	"####.#....",
	"..#.#.....",
	"....#..#.#",
	".##..##.#.",
	".#.####...",
	"####.#.#..",
	"##.####...",
	"##..#.##..",
	"#.##...##.",
	"",
	"Tile 3079:",
	"#.#.#####.",
	".#..######",
	"..#.......",
	"######....",
	"####.#..#.",
	".#...#.##.",
	"#.#####.##",
	"..#.###...",
	"..#.......",
	"..#.###...",
];

#[ test ]
fn part_one () {
	let puzzle = puzzle_metadata ();
	assert_eq_ok! ("20899048083289", puzzle.part_one (EXAMPLE));
}

#[ test ]
fn part_two () {
	let puzzle = puzzle_metadata ();
	assert_eq_ok! ("273", puzzle.part_two (EXAMPLE));
}
